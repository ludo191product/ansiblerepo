---
- name: Playbook to automate Tomcat installation
  hosts: all
  become: true
  vars:
    tomcat_version: "10.1.13"  # Change this to the desired version if needed
    tomcat_base_url: "https://dlcdn.apache.org/tomcat/tomcat-10/v{{ tomcat_version }}/bin/"
    tomcat_archive: "apache-tomcat-{{ tomcat_version }}.tar.gz"
    tomcat_install_dir: "/opt/tomcat"
  tasks:
    - name: Ensure the Tomcat installation directory exists
      ansible.builtin.file:
        path: "{{ tomcat_install_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      register: tomcat_dir_status

    - name: Download Tomcat archive
      ansible.builtin.get_url:
        url: "{{ tomcat_base_url }}{{ tomcat_archive }}"
        dest: "{{ tomcat_install_dir }}/{{ tomcat_archive }}"
        mode: '0644'
      when: tomcat_dir_status.changed or not lookup('ansible.builtin.file', "{{ tomcat_install_dir }}/{{ tomcat_archive }}")
      register: tomcat_download_status

    - name: Extract Tomcat archive
      ansible.builtin.unarchive:
        src: "{{ tomcat_install_dir }}/{{ tomcat_archive }}"
        dest: "{{ tomcat_install_dir }}"
        remote_src: yes
      when: tomcat_download_status.changed or not lookup('ansible.builtin.file', "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}")

    - name: Ensure Tomcat is executable
      ansible.builtin.command:
        cmd: chmod +x {{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/bin/*.sh

    - name: Start Tomcat service
      ansible.builtin.command:
        cmd: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/bin/startup.sh"

    - name: Verify Tomcat is running
      ansible.builtin.uri:
        url: http://localhost:8080
        return_content: no
      register: tomcat_status
      retries: 5
      delay: 5
      until: tomcat_status.status == 200

    - name: Provide final status message
      ansible.builtin.debug:
        msg: "Tomcat {{ tomcat_version }} is installed and running successfully."
